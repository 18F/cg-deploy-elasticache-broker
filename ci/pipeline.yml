resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

resources:
- name: pipeline-tasks
  type: git
  source:
    uri: ((pipeline-tasks-config-uri))
    branch: ((pipeline-tasks-config-branch))

- name: broker-config
  type: git
  source:
    uri: ((broker-config-uri))
    branch: ((broker-config-branch))

- name: broker-release
  type: s3-iam
  source:
    bucket: ((bosh-releases-bucket))
    region_name: ((aws-region))
    regexp: elasticache-broker-(.*).tgz

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: terraform-yaml-development
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-development))
    region_name: ((aws-region))

- name: common-development
  type: cg-common
  source:
    bucket_name: ((secrets-bucket-development))
    secrets_file: elasticache-broker-development.yml
    secrets_passphrase: ((secrets-passphrase-development))
    bosh_cert: bosh.pem
    region: ((aws-region))

- name: development-deployment
  type: bosh-deployment
  source:
    target: ((bosh-target-development))
    client: ((bosh-client-development))
    client_secret: ((bosh-client-secret-development))
    ca_cert: ((ca-cert))
    deployment: elasticache-broker

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

jobs:
- name: deploy-development
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: broker-config
      trigger: true
    - get: broker-release
      trigger: true
    - get: stemcell
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-development
    - get: common
      resource: common-development
      trigger: true
  - task: terraform-secrets
    file: broker-config/ci/terraform-secrets.yml
  - put: development-deployment
    params:
      stemcells:
      - stemcell/*.tgz
      releases:
      - broker-release/*.tgz
      manifest: broker-config/bosh/manifest.yml
      vars_files:
      - broker-config/bosh/varsfiles/catalog.yml
      - terraform-secrets/terraform.yml
      - common/secrets.yml
  - task: update-broker
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((cf-api-url-development))
      CF_USERNAME: ((cf-username-development))
      CF_PASSWORD: ((cf-password-development))
      CF_ORGANIZATION: ((cf-organization-development))
      CF_SPACE: ((cf-space-development))
      BROKER_NAME: elasticache-broker
      BROKER_URL: ((broker-url-development))
      AUTH_USER: ((broker-username-development))
      AUTH_PASS: ((broker-password-development))
      SERVICES: redis
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed elasticache broker on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy elasticache broker on development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: acceptance-tests-development
  plan:
  - aggregate:
    - get: broker-config
      passed: [deploy-development]
      trigger: true
    - get: development-deployment
      passed: [deploy-development]
      trigger: true
  - task: clear-acceptance-space
    file: broker-config/ci/clear-acceptance-space.yml
    params:
      CF_API_URL: ((cf-api-url-development))
      CF_USERNAME: ((cf-username-development))
      CF_PASSWORD: ((cf-password-development))
      CF_ORGANIZATION: ((cf-test-organization-development))
      CF_SPACE: ((cf-test-space-development))
  - task: run-acceptance-tests
    file: broker-config/ci/run-acceptance-tests.yml
    params:
      CF_API_URL: ((cf-api-url-development))
      CF_USERNAME: ((cf-username-development))
      CF_PASSWORD: ((cf-password-development))
      CF_ORGANIZATION: ((cf-test-organization-development))
      CF_SPACE: ((cf-test-space-development))
      SERVICE_NAME: redis
      PLAN_NAME: micro
